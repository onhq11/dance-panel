generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Participant {
  id            Int        @id @default(autoincrement())
  age_group_id  Int
  formation_id  Int?
  first_name    String     @db.VarChar(100)
  last_name     String     @db.VarChar(100)
  nickname      String     @db.VarChar(100)
  year_of_birth Int        @db.Year
  email         String?    @unique(map: "email") @db.VarChar(255)
  token         String?    @db.VarChar(255)
  phone         String?    @db.VarChar(20)
  created_at    DateTime?  @default(now()) @db.Timestamp(0)
  age_group     AgeGroup   @relation(fields: [age_group_id], references: [id], map: "fk_participant_age_group")
  formation     Formation? @relation(fields: [formation_id], references: [id], onDelete: Restrict, map: "fk_participant_formation")

  @@index([age_group_id], map: "idx_participant_age_group_id")
  @@index([formation_id], map: "idx_participant_formation_id")
  @@map("participant")
}

model Competition {
  id                   Int       @id @default(autoincrement())
  name                 String    @db.VarChar(255)
  starts_at            DateTime  @db.Timestamp(0)
  is_active            Boolean?  @default(false)
  is_registration_open Boolean?  @default(false)
  is_running           Boolean?  @default(false)
  created_at           DateTime? @default(now()) @db.Timestamp(0)

  @@map("competition")
}

model AgeGroup {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(255)
  seats        Int
  created_at   DateTime?     @default(now()) @db.Timestamp(0)
  formations   Formation[]
  participants Participant[]

  @@map("age_group")
}

model Formation {
  id            Int           @id @default(autoincrement())
  age_group_id  Int
  coach_id      Int
  name          String        @db.VarChar(255)
  choreographer String        @db.VarChar(255)
  created_at    DateTime?     @default(now()) @db.Timestamp(0)
  age_group     AgeGroup      @relation(fields: [age_group_id], references: [id], map: "fk_formation_age_group")
  coach         Coach         @relation(fields: [coach_id], references: [id], map: "fk_formation_coach")
  members       Participant[]

  @@index([age_group_id], map: "idx_formation_age_group_id")
  @@index([coach_id], map: "idx_formation_coach_id")
  @@map("formation")
}

model Coach {
  id            Int         @id @default(autoincrement())
  first_name    String      @db.VarChar(100)
  last_name     String      @db.VarChar(100)
  club_name     String      @db.VarChar(100)
  year_of_birth Int         @db.Year
  email         String      @unique(map: "email") @db.VarChar(255)
  token         String      @db.VarChar(255)
  phone         String      @db.VarChar(20)
  created_at    DateTime?   @default(now()) @db.Timestamp(0)
  formations    Formation[]

  @@map("coach")
}
